services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: loans-software
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d loan_bank_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway con Nginx (opcional pero recomendado para enrutamiento)
  gateway:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Crea este archivo abajo
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
      loan-service:
        condition: service_started
      admin-service:
        condition: service_started
    
    
  user-login:
      image: postgres:14
      container_name: user-login-db
      environment:
        POSTGRES_DB: user-login-db
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: password
      ports:
        - "5433:5432"
      volumes:
        - user-login-data:/var/lib/postgresql/data

  user-service:
    build: /../user-service
    ports:
      - "3001:3000"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: admin
      DATABASE_PASSWORD: password
      DATABASE_NAME: user-service-db
      DATABASE_SCHEMA: user_service
      JWT_SECRET: mysecret
      PORT: 3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./user-service:/app  # Para hot-reload en dev
    command: npm run start:dev

  loan-service:
    build: /../loan-service
    ports:
      - "3002:3000"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: admin
      DATABASE_PASSWORD: password
      DATABASE_NAME: loans-software
      DATABASE_SCHEMA: loan_service
      USER_SERVICE_URL: http://user-service:3001
      JWT_SECRET: mysecret
      PORT: 3000
    depends_on:
      user-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./loan-service:/app
    command: npm run start:dev

  admin-service:
    build: /../admin-service
    ports:
      - "3003:3000"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: admin
      DATABASE_PASSWORD: password
      DATABASE_NAME: loans-software
      DATABASE_SCHEMA: admin_service
      LOAN_SERVICE_URL: http://loan-service:3002
      USER_SERVICE_URL: http://user-service:3001
      JWT_SECRET: mysecret
      PORT: 3000
    depends_on:
      loan-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./admin-service:/app
    command: npm run start:dev

  frontend:
    build: /../loans-frontend
    ports:
      - "3004:80"
    environment:
      - REACT_APP_API_URL=http://gateway:80  # Usa gateway para enrutamiento
    depends_on:
      - gateway
    volumes:
      - ./frontend:/app  # Para dev, pero usa nginx para serve

volumes:
  user-login-data:
  postgres_data: